Bootstrap: docker
# If you are using GPU RTX3090 write:
From: nvidia/cuda:11.1.1-devel-ubuntu18.04
# Otherwise
# From: nvidia/cuda:11.0.3-devel-ubuntu18.04

%post

#Post setup, runs inside the image

# Default mount point used in Shef Uni's ShARC cluster
# mkdir /scratch /data /shared /fastdata

# Nvidia driver file mount paths
mkdir /nvlib /nvbin

# Add nvidia driver paths to the environment variables
echo "\n #Nvidia driver paths \n" >> /environment
echo 'export PATH="/nvbin:$PATH"' >> /environment
echo 'export LD_LIBRARY_PATH="/nvlib:$LD_LIBRARY_PATH"' >> /environment

# Add CUDA paths
echo "\n #Cuda paths \n" >> /environment
echo 'export CPATH="/usr/local/cuda/include:$CPATH"' >> /environment
echo 'export PATH="/usr/local/cuda/bin:$PATH"' >> /environment
echo 'export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"' >> /environment
echo 'export CUDA_HOME="/usr/local/cuda"' >> /environment

# Packages for Anaconda
apt-get update && apt-get -y upgrade
apt-get -y install \
build-essential \
wget \
bzip2 \
ca-certificates \
libglib2.0-0 \
libxext6 \
libsm6 \
libxrender1 \
git
rm -rf /var/lib/apt/lists/*
apt-get clean

# Installing Anaconda 3 
wget -c https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh
/bin/bash Anaconda3-2020.02-Linux-x86_64.sh -bfp /usr/local
# Conda configuration of channels from .condarc file
conda config --file /.condarc --add channels defaults
conda config --file /.condarc --add channels conda-forge
conda update conda
# List installed environments
conda list

# Create new Anaconda env for thesis "stylegan-pytorch"
conda create -y -n stylegan-pytorch python==3.7

activate stylegan-pytorch
pip install click requests tqdm pyspng ninja imageio-ffmpeg==0.4.3
pip install scipy
#conda install -c nvidia cudnn=8.0 cudatoolkit=11.1 
pip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html 
